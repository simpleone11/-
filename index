<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>แอปพลิเคชันรับออเดอร์</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Sarabun:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Chosen Palette: Calm & Clear -->
    <!-- Application Structure Plan: A multi-view SPA (Tables, Order, Reports) within a two-panel layout. The left panel switches between these primary views, while the right panel remains the persistent order summary when in the 'Order' view. This structure logically separates the core operational tasks (ordering) from administrative tasks (reporting), preventing UI clutter. User flow is enhanced by allowing seamless switching between taking orders and checking daily performance. -->
    <!-- Visualization & Content Choices: The report describes a process, not data, so no charts are needed. The core "visualizations" are the interactive UI elements themselves. Table Map: HTML grid for spatial representation. Menu: Filterable buttons. Reports: Summary cards (HTML/CSS) for key metrics and two detailed tables (HTML) for transactions and item summaries. This provides a high-level overview, granular bill detail, and item performance data. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Sarabun', sans-serif;
        }
        .table-status-green { background-color: #22c55e; color: white; }
        .table-status-red { background-color: #ef4444; color: white; }
        .table-status-yellow { background-color: #f59e0b; color: white; }
        .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.5);
        }
        .category-btn.active, .payment-method-btn.active {
            background-color: #1e3a8a;
            color: white;
            border-color: #1e3a8a;
        }
    </style>
</head>
<body class="bg-stone-100 text-slate-800">

    <div id="app" class="flex flex-col md:flex-row h-screen w-full">

        <!-- Main Content Panel (Left) -->
        <main id="main-panel" class="w-full md:w-3/5 lg:w-2/3 p-4 md:p-6 overflow-y-auto">
            <!-- Table View -->
            <div id="table-view">
                <div class="flex justify-between items-center mb-4">
                    <h1 class="text-3xl font-bold text-slate-700">เลือกโต๊ะ</h1>
                    <button id="view-report-btn" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg transition duration-200">
                        <i class="fas fa-chart-line mr-2"></i>รายงาน
                    </button>
                </div>
                <div id="table-grid" class="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-4">
                    <!-- Tables will be rendered here by JS -->
                </div>
            </div>

            <!-- Order View (Initially Hidden) -->
            <div id="order-view" class="hidden">
                <div class="flex justify-between items-center mb-4">
                    <h1 id="order-view-title" class="text-3xl font-bold text-slate-700">โต๊ะ 1</h1>
                    <button id="back-to-tables-btn" class="bg-slate-500 hover:bg-slate-600 text-white font-bold py-2 px-4 rounded-lg transition duration-200">
                        <i class="fas fa-th-large mr-2"></i>กลับไปหน้าเลือกโต๊ะ
                    </button>
                </div>
                <div>
                    <h2 class="text-xl font-semibold mb-3">เลือกเมนู</h2>
                    <div id="category-buttons" class="flex flex-wrap gap-2 mb-4">
                        <!-- Category buttons will be rendered here -->
                    </div>
                    <div id="menu-items" class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3">
                        <!-- Menu items will be rendered here -->
                    </div>
                </div>
            </div>
            
            <!-- Report View (Initially Hidden) -->
            <div id="report-view" class="hidden">
                 <div class="flex justify-between items-center mb-4">
                    <h1 class="text-3xl font-bold text-slate-700">สรุปยอดขาย</h1>
                    <button id="back-to-tables-from-report-btn" class="bg-slate-500 hover:bg-slate-600 text-white font-bold py-2 px-4 rounded-lg transition duration-200">
                        <i class="fas fa-th-large mr-2"></i>กลับไปหน้าเลือกโต๊ะ
                    </button>
                </div>
                <div class="mb-4">
                    <label for="report-date" class="block text-sm font-medium text-slate-700">เลือกวันที่:</label>
                    <input type="date" id="report-date" class="mt-1 block w-full md:w-1/3 p-2 border border-slate-300 rounded-md shadow-sm">
                </div>
                <!-- Summary Cards -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <div class="bg-blue-500 text-white p-4 rounded-lg shadow-lg"><p>ยอดขายรวม</p><h3 id="report-total-sales" class="text-2xl font-bold">฿0</h3></div>
                    <div class="bg-green-500 text-white p-4 rounded-lg shadow-lg"><p>จำนวนบิล</p><h3 id="report-bill-count" class="text-2xl font-bold">0</h3></div>
                    <div class="bg-orange-500 text-white p-4 rounded-lg shadow-lg"><p>ยอดเงินสด</p><h3 id="report-cash-sales" class="text-2xl font-bold">฿0</h3></div>
                    <div class="bg-indigo-500 text-white p-4 rounded-lg shadow-lg"><p>ยอดโอน</p><h3 id="report-transfer-sales" class="text-2xl font-bold">฿0</h3></div>
                </div>
                <!-- Transaction List -->
                <div class="bg-white p-4 rounded-lg shadow">
                    <h2 class="text-xl font-bold mb-2">รายการบิล</h2>
                    <div class="overflow-y-auto max-h-60">
                        <table class="min-w-full divide-y divide-slate-200">
                            <thead class="bg-slate-50">
                                <tr>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">เวลา</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">โต๊ะ</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">ยอดชำระ</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">วิธีชำระ</th>
                                </tr>
                            </thead>
                            <tbody id="report-transaction-list" class="bg-white divide-y divide-slate-200">
                                <!-- Data will be here -->
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- Item Sales Summary -->
                <div class="bg-white p-4 rounded-lg shadow mt-6">
                    <h2 class="text-xl font-bold mb-2">สรุปยอดขายตามรายการอาหาร</h2>
                    <div class="overflow-y-auto max-h-96">
                        <table class="min-w-full divide-y divide-slate-200">
                            <thead class="bg-slate-50">
                                <tr>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">รายการอาหาร</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">จำนวน</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-slate-500 uppercase">ยอดรวม</th>
                                </tr>
                            </thead>
                            <tbody id="report-item-summary-list" class="bg-white divide-y divide-slate-200">
                                <!-- Data will be here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>

        <!-- Order Summary Panel (Right) -->
        <aside id="summary-panel" class="w-full md:w-2/5 lg:w-1/3 bg-white border-l border-slate-200 flex-col p-4 md:p-6">
            <div id="summary-placeholder" class="flex-grow flex flex-col justify-center items-center text-slate-400">
                <i class="fas fa-clipboard-list fa-4x mb-4"></i>
                <p class="text-lg font-medium">กรุณาเลือกโต๊ะเพื่อเริ่มรับออเดอร์</p>
            </div>
            <div id="summary-content" class="hidden flex-grow flex-col">
                <h2 class="text-2xl font-bold mb-4 text-slate-700 border-b pb-2">สรุปรายการ - <span id="summary-table-id"></span></h2>
                <ul id="order-list" class="flex-grow space-y-3 overflow-y-auto pr-2">
                    <!-- Order items will be listed here -->
                </ul>
                <div class="mt-4 pt-4 border-t">
                    <div class="flex justify-between items-center text-xl font-bold">
                        <span>รวมทั้งหมด:</span>
                        <span id="total-price">฿0</span>
                    </div>
                    <div class="grid grid-cols-2 gap-3 mt-4">
                        <button id="send-to-kitchen-btn" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition duration-200 disabled:bg-slate-400">
                            <i class="fas fa-paper-plane mr-2"></i>ส่งเข้าครัว
                        </button>
                        <button id="check-bill-btn" class="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-4 rounded-lg transition duration-200 disabled:bg-slate-400">
                            <i class="fas fa-file-invoice-dollar mr-2"></i>เรียกเก็บเงิน
                        </button>
                    </div>
                </div>
            </div>
        </aside>

    </div>

    <!-- Modals -->
    <div id="customization-modal" class="fixed inset-0 z-50 items-center justify-center hidden modal-backdrop">
        <div class="bg-white rounded-lg shadow-xl w-11/12 md:w-1/2 lg:w-1/3 p-6 animate-fade-in"><h3 id="modal-item-name" class="text-2xl font-bold mb-4">ปรับแต่งรายการ</h3><div id="modal-options" class="space-y-4"></div><div class="mt-6 flex justify-end gap-3"><button id="modal-cancel-btn" class="bg-slate-200 hover:bg-slate-300 text-slate-800 font-bold py-2 px-5 rounded-lg">ยกเลิก</button><button id="modal-confirm-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg">ยืนยัน</button></div></div>
    </div>
    <div id="payment-modal" class="fixed inset-0 z-50 items-center justify-center hidden modal-backdrop">
        <div class="bg-white rounded-lg shadow-xl w-11/12 md:w-1/3 p-6"><h3 id="payment-modal-title" class="text-2xl font-bold mb-4">ชำระเงิน</h3><div class="text-center my-6"><p class="text-lg text-slate-600">ยอดชำระทั้งหมด</p><p id="payment-modal-total" class="text-4xl font-bold text-blue-600">฿0</p></div><div class="mb-6"><h4 class="font-semibold mb-2 text-center">เลือกวิธีชำระเงิน</h4><div id="payment-options" class="flex justify-center gap-4"><button data-method="โอน" class="payment-method-btn w-full bg-white hover:bg-blue-100 text-blue-800 font-semibold py-3 px-4 border border-blue-400 rounded-lg shadow transition duration-200"><i class="fas fa-qrcode mr-2"></i>โอน</button><button data-method="เงินสด" class="payment-method-btn w-full bg-white hover:bg-blue-100 text-blue-800 font-semibold py-3 px-4 border border-blue-400 rounded-lg shadow transition duration-200"><i class="fas fa-money-bill-wave mr-2"></i>เงินสด</button></div></div><div class="flex justify-end gap-3"><button id="payment-cancel-btn" class="bg-slate-200 hover:bg-slate-300 text-slate-800 font-bold py-2 px-5 rounded-lg">ยกเลิก</button><button id="payment-confirm-btn" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-5 rounded-lg disabled:bg-slate-400" disabled>ยืนยันชำระเงิน</button></div></div>
    </div>
    <div id="toast-notification" class="fixed top-5 right-5 bg-green-500 text-white py-3 px-5 rounded-lg shadow-lg opacity-0 translate-y-10 transition-all duration-300"><p id="toast-message"></p></div>


<script>
const noodleOptions = [
    { name: 'เส้น', type: 'radio', choices: ['เส้นเล็ก', 'เส้นใหญ่', 'เส้นหมี่', 'บะหมี่', 'วุ้นเส้น'] },
    { name: 'ประเภท', type: 'radio', choices: ['น้ำ', 'แห้ง'] }
];

const appState = {
    currentView: 'tables',
    selectedTableId: null,
    tableForPayment: null,
    selectedPaymentMethod: null,
    tables: [],
    orders: {},
    salesHistory: [],
    menu: {
        categories: [
            { id: 'noodles', name: 'ก๋วยเตี๋ยวและเกาเหลา' },
            { id: 'rice', name: 'เมนูข้าว' },
            { id: 'appetizers', name: 'ของทานเล่น' },
            { id: 'desserts', name: 'ของหวาน' },
            { id: 'drinks', name: 'เครื่องดื่ม' },
        ],
        items: [
            { id: 1, category: 'noodles', name: 'ก๋วยเตี๋ยวหมู (ธรรมดา)', price: 60, options: noodleOptions },
            { id: 2, category: 'noodles', name: 'ก๋วยเตี๋ยวหมู (พิเศษ)', price: 70, options: noodleOptions },
            { id: 3, category: 'noodles', name: 'ก๋วยเตี๋ยวเนื้อ (ธรรมดา)', price: 70, options: noodleOptions },
            { id: 4, category: 'noodles', name: 'ก๋วยเตี๋ยวเนื้อ (พิเศษ)', price: 80, options: noodleOptions },
            { id: 5, category: 'noodles', name: 'ก๋วยเตี๋ยวเนื้อโคขุน', price: 100, options: noodleOptions },
            { id: 6, category: 'noodles', name: 'เกาเหลาหมู (ธรรมดา)', price: 60 },
            { id: 7, category: 'noodles', name: 'เกาเหลาหมู (พิเศษ)', price: 70 },
            { id: 8, category: 'noodles', name: 'เกาเหลาเนื้อ (ธรรมดา)', price: 90 },
            { id: 9, category: 'noodles', name: 'เกาเหลาเนื้อ (พิเศษ)', price: 100 },
            { id: 10, category: 'noodles', name: 'เกาเหลาเนื้อโคขุน', price: 120 },
            { id: 11, category: 'rice', name: 'ข้าวกะเพราเนื้อตุ๋น', price: 70 },
            { id: 12, category: 'rice', name: 'ข้าวเนื้ออบ', price: 70 },
            { id: 13, category: 'rice', name: 'ข้าวสวย', price: 10 },
            { id: 14, category: 'appetizers', name: 'เนื้อย่าง (1 ชุด 3 ไม้)', price: 45 },
            { id: 15, category: 'appetizers', name: 'เนื้อลวกจิ้ม', price: 240 },
            { id: 16, category: 'desserts', name: 'พุดดิ้งมะพร้าวอ่อน', price: 45 },
            { id: 17, category: 'desserts', name: 'เปียกปูนใบเตยกะทิสด', price: 45 },
            { id: 18, category: 'drinks', name: 'น้ำเปล่า', price: 10 },
            { id: 19, category: 'drinks', name: 'น้ำอัดลม', price: 15 },
            { id: 20, category: 'drinks', name: 'น้ำเก็กฮวย', price: 15 },
            { id: 21, category: 'drinks', name: 'น้ำตะไคร้สด', price: 15 },
        ]
    },
    currentItemForCustomization: null
};

document.addEventListener('DOMContentLoaded', () => {
    initializeData();
    render();
    setupEventListeners();
});

function setupEventListeners() {
    document.getElementById('back-to-tables-btn').addEventListener('click', () => {
        appState.selectedTableId = null;
        switchView('tables');
    });
    document.getElementById('view-report-btn').addEventListener('click', () => {
        appState.selectedTableId = null;
        switchView('report');
    });
    document.getElementById('back-to-tables-from-report-btn').addEventListener('click', () => {
        appState.selectedTableId = null;
        switchView('tables');
    });
    
    document.getElementById('modal-cancel-btn').addEventListener('click', hideCustomizationModal);
    document.getElementById('modal-confirm-btn').addEventListener('click', confirmCustomization);
    document.getElementById('send-to-kitchen-btn').addEventListener('click', sendToKitchen);
    document.getElementById('check-bill-btn').addEventListener('click', checkBill);
    
    document.getElementById('payment-cancel-btn').addEventListener('click', hidePaymentModal);
    document.getElementById('payment-confirm-btn').addEventListener('click', confirmPayment);
    document.querySelectorAll('.payment-method-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            document.querySelectorAll('.payment-method-btn').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
            appState.selectedPaymentMethod = btn.dataset.method;
            document.getElementById('payment-confirm-btn').disabled = false;
        });
    });
    
    document.getElementById('report-date').addEventListener('change', renderReportView);
}

function initializeData() {
    const savedSales = localStorage.getItem('noodleShopSalesHistory');
    if (savedSales) {
        appState.salesHistory = JSON.parse(savedSales);
    }

    for (let i = 1; i <= 20; i++) {
        appState.tables.push({ id: i, status: 'green' });
        appState.orders[i] = [];
    }
    document.getElementById('report-date').valueAsDate = new Date();
}

function switchView(viewName) {
    appState.currentView = viewName;
    render();
}

function render() {
    const views = ['table-view', 'order-view', 'report-view'];
    views.forEach(v => document.getElementById(v).classList.add('hidden'));
    document.getElementById('summary-panel').classList.add('hidden');
    document.getElementById('summary-panel').classList.remove('flex');
    
    if (appState.currentView === 'tables') {
        showView('table-view');
        renderTableView();
        showSummaryPlaceholder();
    } else if (appState.currentView === 'order') {
        showView('order-view');
        document.getElementById('summary-panel').classList.remove('hidden');
        document.getElementById('summary-panel').classList.add('flex');
        renderOrderView();
        hideSummaryPlaceholder();
        renderOrderSummary();
    } else if (appState.currentView === 'report') {
        showView('report-view');
        renderReportView();
        showSummaryPlaceholder();
    }
}

function renderTableView() {
    const grid = document.getElementById('table-grid');
    grid.innerHTML = '';
    appState.tables.forEach(table => {
        const tableDiv = document.createElement('div');
        const statusClass = table.status === 'green' ? 'table-status-green' : 'table-status-red';
        let statusText = table.status === 'green' ? 'ว่าง' : 'ไม่ว่าง';
        
        tableDiv.className = `${statusClass} rounded-lg flex flex-col items-center justify-center h-24 cursor-pointer hover:scale-105 transition-transform duration-200`;
        tableDiv.innerHTML = `<span class="text-sm font-semibold">${statusText}</span><span class="text-3xl font-bold">${table.id}</span>`;
        tableDiv.addEventListener('click', () => selectTable(table.id));
        grid.appendChild(tableDiv);
    });
}

function renderOrderView() {
    document.getElementById('order-view-title').textContent = `โต๊ะ ${appState.selectedTableId}`;
    renderCategoryButtons();
    const firstCategoryId = appState.menu.categories[0].id;
    filterMenu(firstCategoryId, document.querySelector('.category-btn'));
}

function renderCategoryButtons() {
    const container = document.getElementById('category-buttons');
    container.innerHTML = '';
    appState.menu.categories.forEach((cat, index) => {
        const button = document.createElement('button');
        button.textContent = cat.name;
        button.dataset.categoryId = cat.id;
        button.className = 'category-btn bg-white hover:bg-blue-100 text-blue-800 font-semibold py-2 px-4 border border-blue-400 rounded-lg shadow transition duration-200';
        if (index === 0) button.classList.add('active');
        button.addEventListener('click', (e) => filterMenu(cat.id, e.target));
        container.appendChild(button);
    });
}

function filterMenu(categoryId, clickedButton) {
    document.querySelectorAll('.category-btn').forEach(btn => btn.classList.remove('active'));
    if (clickedButton) clickedButton.classList.add('active');
    const menuContainer = document.getElementById('menu-items');
    menuContainer.innerHTML = '';
    appState.menu.items.filter(item => item.category === categoryId).forEach(item => {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'bg-white rounded-lg shadow p-3 flex flex-col justify-between items-center cursor-pointer hover:shadow-lg transition-shadow duration-200';
        itemDiv.innerHTML = `<span class="font-semibold text-center">${item.name}</span><span class="text-slate-500">฿${item.price}</span>`;
        itemDiv.addEventListener('click', () => selectMenuItem(item.id));
        menuContainer.appendChild(itemDiv);
    });
}

function renderOrderSummary() {
    const tableOrder = appState.orders[appState.selectedTableId];
    const list = document.getElementById('order-list');
    const totalPriceEl = document.getElementById('total-price');
    const sendBtn = document.getElementById('send-to-kitchen-btn');
    const billBtn = document.getElementById('check-bill-btn');
    document.getElementById('summary-table-id').textContent = `โต๊ะ ${appState.selectedTableId}`;
    list.innerHTML = '';
    if (!tableOrder || tableOrder.length === 0) {
        list.innerHTML = `<li class="text-center text-slate-400 py-8">ยังไม่มีรายการ</li>`;
        sendBtn.disabled = true;
        billBtn.disabled = true;
    } else {
        sendBtn.disabled = false;
        billBtn.disabled = false;
    }
    let total = 0;
    tableOrder.forEach((orderItem, index) => {
        const li = document.createElement('li');
        li.className = 'bg-stone-50 p-3 rounded-lg flex justify-between items-start';
        let detailsHtml = '';
        if (orderItem.customizations && Object.keys(orderItem.customizations).length > 0) {
            detailsHtml = `<ul class="text-xs text-slate-500 pl-2">${Object.entries(orderItem.customizations).map(([key, val]) => `<li>- ${val}</li>`).join('')}</ul>`;
        }
        li.innerHTML = `<div><p class="font-semibold">${orderItem.name}</p>${detailsHtml}</div><div class="flex items-center gap-4"><span class="font-semibold">฿${orderItem.price}</span><button class="text-red-500 hover:text-red-700" onclick="removeItem(${index})"><i class="fas fa-trash-alt"></i></button></div>`;
        list.appendChild(li);
        total += orderItem.price;
    });
    totalPriceEl.textContent = `฿${total}`;
}

function renderReportView() {
    const selectedDate = document.getElementById('report-date').value;
    const transactions = appState.salesHistory.filter(sale => {
        const saleDate = new Date(sale.timestamp).toISOString().split('T')[0];
        return saleDate === selectedDate;
    });

    let totalSales = 0, billCount = 0, cashSales = 0, transferSales = 0;
    transactions.forEach(sale => {
        totalSales += sale.total;
        billCount++;
        if (sale.paymentMethod === 'เงินสด') cashSales += sale.total;
        if (sale.paymentMethod === 'โอน') transferSales += sale.total;
    });

    document.getElementById('report-total-sales').textContent = `฿${totalSales.toLocaleString()}`;
    document.getElementById('report-bill-count').textContent = billCount;
    document.getElementById('report-cash-sales').textContent = `฿${cashSales.toLocaleString()}`;
    document.getElementById('report-transfer-sales').textContent = `฿${transferSales.toLocaleString()}`;
    
    const listBody = document.getElementById('report-transaction-list');
    listBody.innerHTML = '';
    if (transactions.length === 0) {
        listBody.innerHTML = `<tr><td colspan="4" class="text-center text-slate-400 py-4">ไม่มีข้อมูลสำหรับวันที่เลือก</td></tr>`;
    } else {
        transactions.forEach(sale => {
            const row = listBody.insertRow();
            const time = new Date(sale.timestamp).toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' });
            row.innerHTML = `<td class="px-4 py-2">${time}</td><td class="px-4 py-2">${sale.tableId}</td><td class="px-4 py-2">฿${sale.total}</td><td class="px-4 py-2">${sale.paymentMethod}</td>`;
        });
    }

    const itemSalesSummary = {};
    transactions.forEach(sale => {
        sale.items.forEach(item => {
            if (!itemSalesSummary[item.name]) {
                itemSalesSummary[item.name] = { quantity: 0, total: 0 };
            }
            itemSalesSummary[item.name].quantity += 1;
            itemSalesSummary[item.name].total += item.price;
        });
    });

    const itemSummaryListBody = document.getElementById('report-item-summary-list');
    itemSummaryListBody.innerHTML = '';

    if (Object.keys(itemSalesSummary).length === 0) {
        itemSummaryListBody.innerHTML = `<tr><td colspan="3" class="text-center text-slate-400 py-4">ไม่มีข้อมูล</td></tr>`;
    } else {
        const sortedItems = Object.entries(itemSalesSummary).sort(([,a], [,b]) => b.quantity - a.quantity);
        sortedItems.forEach(([itemName, data]) => {
            const row = itemSummaryListBody.insertRow();
            row.innerHTML = `
                <td class="px-4 py-2">${itemName}</td>
                <td class="px-4 py-2">${data.quantity}</td>
                <td class="px-4 py-2">฿${data.total}</td>
            `;
        });
    }
}

function selectTable(tableId) {
    const table = appState.tables.find(t => t.id === tableId);
    appState.selectedTableId = tableId;
    if (table.status === 'green') {
        table.status = 'red';
    }
    switchView('order');
}

function selectMenuItem(itemId) {
    const item = appState.menu.items.find(i => i.id === itemId);
    if (item.options) {
        appState.currentItemForCustomization = item;
        showCustomizationModal(item);
    } else {
        addItemToOrder(item, {});
    }
}

function showCustomizationModal(item) {
    const modal = document.getElementById('customization-modal');
    document.getElementById('modal-item-name').textContent = `ปรับแต่ง: ${item.name}`;
    const optionsContainer = document.getElementById('modal-options');
    optionsContainer.innerHTML = '';
    item.options.forEach(option => {
        const optionGroup = document.createElement('div');
        optionGroup.innerHTML = `<h4 class="font-semibold mb-2">${option.name}</h4>`;
        const choicesDiv = document.createElement('div');
        choicesDiv.className = 'flex flex-wrap gap-2';
        option.choices.forEach((choice, index) => {
            const choiceId = `${option.name}-${index}`;
            const wrapper = document.createElement('div');
            const input = document.createElement('input');
            input.type = option.type; input.id = choiceId; input.name = option.name; input.value = choice;
            if (index === 0) input.checked = true;
            input.className = 'hidden peer';
            const label = document.createElement('label');
            label.htmlFor = choiceId; label.textContent = choice;
            label.className = 'block cursor-pointer select-none rounded-lg p-2 text-center peer-checked:bg-blue-500 peer-checked:font-bold peer-checked:text-white border border-slate-300';
            wrapper.appendChild(input); wrapper.appendChild(label);
            choicesDiv.appendChild(wrapper);
        });
        optionGroup.appendChild(choicesDiv); optionsContainer.appendChild(optionGroup);
    });
    const notesGroup = document.createElement('div');
    notesGroup.innerHTML = `<h4 class="font-semibold mb-2">หมายเหตุพิเศษ</h4>`;
    const notesInput = document.createElement('input');
    notesInput.type = 'text'; notesInput.id = 'special-notes'; notesInput.placeholder = 'เช่น ไม่ใส่';
    notesInput.className = 'w-full p-2 border border-slate-300 rounded-lg';
    notesGroup.appendChild(notesInput); optionsContainer.appendChild(notesGroup);
    modal.classList.remove('hidden'); modal.classList.add('flex');
}

function hideCustomizationModal() {
    document.getElementById('customization-modal').classList.add('hidden');
    document.getElementById('customization-modal').classList.remove('flex');
    appState.currentItemForCustomization = null;
}

function confirmCustomization() {
    const item = appState.currentItemForCustomization;
    const customizations = {};
    item.options.forEach(option => {
        const selected = document.querySelector(`input[name="${option.name}"]:checked`);
        if (selected) customizations[option.name] = selected.value;
    });
    const notes = document.getElementById('special-notes').value;
    if (notes) customizations['หมายเหตุ'] = notes;
    addItemToOrder(item, customizations);
    hideCustomizationModal();
}

function addItemToOrder(item, customizations) {
    const orderItem = { id: Date.now(), itemId: item.id, name: item.name, price: item.price, customizations: customizations };
    appState.orders[appState.selectedTableId].push(orderItem);
    renderOrderSummary();
    showToast(`เพิ่ม '${item.name}' ลงในออเดอร์แล้ว`);
}

function removeItem(index) {
    appState.orders[appState.selectedTableId].splice(index, 1);
    renderOrderSummary();
}

function sendToKitchen() {
    const order = appState.orders[appState.selectedTableId];
    if (order && order.length > 0) {
        console.log(`--- ส่งเข้าครัว โต๊ะ ${appState.selectedTableId} ---`);
        order.forEach(item => console.log(`- ${item.name}`, item.customizations || ''));
        console.log('------------------------------------');
        showToast(`ส่งออเดอร์โต๊ะ ${appState.selectedTableId} เข้าครัวเรียบร้อย!`);
    }
}

function checkBill() {
    const tableId = appState.selectedTableId;
    const table = appState.tables.find(t => t.id === tableId);
    if (table) {
        appState.tableForPayment = tableId;
        showPaymentModal(tableId);
    }
}

function showPaymentModal(tableId) {
    appState.tableForPayment = tableId;
    const modal = document.getElementById('payment-modal');
    const total = appState.orders[tableId].reduce((sum, item) => sum + item.price, 0);
    document.getElementById('payment-modal-title').textContent = `ชำระเงิน - โต๊ะ ${tableId}`;
    document.getElementById('payment-modal-total').textContent = `฿${total}`;
    appState.selectedPaymentMethod = null;
    document.querySelectorAll('.payment-method-btn').forEach(btn => btn.classList.remove('active'));
    document.getElementById('payment-confirm-btn').disabled = true;
    modal.classList.remove('hidden'); modal.classList.add('flex');
}

function hidePaymentModal() {
    document.getElementById('payment-modal').classList.add('hidden');
    document.getElementById('payment-modal').classList.remove('flex');
    appState.tableForPayment = null;
    appState.selectedPaymentMethod = null;
}

function confirmPayment() {
    const tableId = appState.tableForPayment;
    if (!tableId || !appState.selectedPaymentMethod) return;
    const table = appState.tables.find(t => t.id === tableId);
    if (table) {
        const total = appState.orders[tableId].reduce((sum, item) => sum + item.price, 0);
        const saleRecord = {
            timestamp: new Date().toISOString(),
            tableId: tableId,
            total: total,
            paymentMethod: appState.selectedPaymentMethod,
            items: appState.orders[tableId]
        };
        appState.salesHistory.push(saleRecord);
        localStorage.setItem('noodleShopSalesHistory', JSON.stringify(appState.salesHistory));
        
        appState.orders[tableId] = [];
        table.status = 'green';
        console.log(`โต๊ะ ${tableId} ชำระเงินด้วย ${appState.selectedPaymentMethod} และเคลียร์โต๊ะแล้ว`);
        showToast(`ชำระเงินโต๊ะ ${tableId} เรียบร้อย!`);
        hidePaymentModal();
        switchView('tables');
    }
}

function showToast(message) {
    const toast = document.getElementById('toast-notification');
    toast.querySelector('p').textContent = message;
    toast.classList.remove('opacity-0', 'translate-y-10');
    setTimeout(() => toast.classList.add('opacity-0', 'translate-y-10'), 3000);
}

function showView(viewId) { document.getElementById(viewId).classList.remove('hidden'); }
function hideView(viewId) { document.getElementById(viewId).classList.add('hidden'); }
function showSummaryPlaceholder() {
    const placeholder = document.getElementById('summary-placeholder');
    const content = document.getElementById('summary-content');
    const panel = document.getElementById('summary-panel');
    placeholder.classList.remove('hidden'); placeholder.classList.add('flex');
    content.classList.add('hidden');
    panel.classList.remove('hidden'); panel.classList.add('flex');
}
function hideSummaryPlaceholder() {
    document.getElementById('summary-placeholder').classList.add('hidden');
    document.getElementById('summary-content').classList.remove('hidden');
    document.getElementById('summary-content').classList.add('flex');
}

</script>
</body>
</html>
